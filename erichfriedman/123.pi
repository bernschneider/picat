/* Janko Erich Friedman 123
https://erich-friedman.github.io/puzzle/honey/ */
import sat, util. 
nb(M,Z,S) = [(Z1,S1) : (Z1,S1) in [(Z-1,S),(Z,S-1),(Z,S+1),(Z+1,S), (Z+1,S-1),(Z-1,S+1)],   
                        0<Z1, Z1=<len(M), 0<S1, S1=<len(M[1]), (var(M[Z1,S1]); (ground(M[Z1,S1]), M[Z1,S1] > 0))].

main(No) ?=>
    input(No, M), NZ = len(M), NS = len(M[1]), M :: 0..3, 
    Mlist = array_matrix_to_list(M),
    count(3, Mlist, C3), C3 mod 3 #= 0,
    foreach(Z in 1..NZ, S in 1..NS, var(M[Z,S])) M[Z,S] #> 0 end,
    HNb = new_array(NZ,NS), HNb :: 0..2,
    foreach(Z in 1..NZ, S in 1..NS, (var(M[Z,S]); (ground(M[Z,S]), M[Z,S] > 0)))
        HNb[Z,S] #=     sum([(M[Z1,S1] #= M[Z,S])              : (Z1,S1) in nb(M,Z,S)]),
        M[Z,S] #= 1 #<=> HNb[Z,S] #= 0,
        Cnt #= sum([ (M[Z1,S1] #= M[Z,S]) * HNb[Z1,S1] : (Z1,S1) in nb(M,Z,S)]), Cnt :: [0,1,2,4],
        Cnt #= 1 #=> M[Z,S] #= 2,
        Cnt #> 1 #=> M[Z,S] #= 3
    end,
    solve(M),
    foreach(Z in 1..NZ, S in 1..NS) 
		printf("%2d|", M[Z,S]),
        if S = NS then nl end
    end, nl, fail.

input(0, M) =>
    M = {{0,2,_}, {_,_,1}, {3,_,0}}. /*
now no solution, but earlier I got this one. Reason may be, that some vars got grounded early.
 0| 2| 2|
 1| 3| 1|
 3| 3| 0| korrekt */
input(1, M) =>
    M = {{0,0,_,_,_}, {0,1,_,_,_}, {_,_,3,2,_}, {_,_,_,1,0}, {_,_,_,0,0}}. /*
 0| 0| 2| 2| 3|
 0| 1| 3| 1| 3|
 2| 3| 3| 2| 3|
 2| 1| 2| 1| 0|
 3| 3| 3| 0| 0| no more solutions, korrekt */
input(2, M) =>
    M = {{0,0,_,2,_}, {0,1,_,_,_}, {_,_,_,_,_}, {2,_,3,_,0}, {_,_,_,0,0}}. /*
 0| 0| 2| 2| 3|
 0| 1| 3| 1| 3|
 3| 3| 2| 2| 3|
 2| 1| 3| 1| 0|
 2| 3| 3| 0| 0| 2nd solution sieht gut aus! */
input(3, M) =>
    M = {{0,0,2,_,_}, {0,_,_,1,_}, {_,_,_,_,_}, {3,_,_,_,0}, {_,3,_,0,0}}. /*
 0| 0| 2| 3| 3|
 0| 3| 2| 1| 3|
 3| 1| 3| 2| 1|
 3| 2| 3| 2| 0|
 2| 3| 1| 0| 0| no more solutions, korrekt */