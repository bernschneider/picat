/* Janko Erich Friedman Number Link
https://erich-friedman.github.io/puzzle/numbox/ */
import util, cp.

main(No) =>
    input(No, Digits, Boxes), Digits :: 1..9, all_different(Digits),
    Total :: 1..45,
    foreach(Box in Boxes) sum(Box) #= Total end, 
    solve([Total|Digits]), 
    println(digits=Digits),
    foreach(Box in Boxes) printf("%d = sum(%w)%n", Total,  Box) end.

input(1, Digits, Boxes) =>
    Digits = [A,B,C,D,E,F,G,H,I],
    Boxes = [[A,E,F,G], [B,C,D,G,H], [A,B,C,D], [B,C,G,I], [C,D,E,F,G,H], [F,G,H,I]]. /*
digits = [9,8,3,2,1,7,5,4,6]
22 = sum([9,1,7,5])
22 = sum([8,3,2,5,4])
22 = sum([9,8,3,2])
22 = sum([8,3,5,6])
22 = sum([3,2,1,7,5,4])
22 = sum([7,5,4,6]) korrekt */
input(4, Digits, Boxes) =>
    Digits = [A,B,C,D,E,F,G,H,I],
    Boxes = [[A,C,D,E], [A,B,E,F,H], [A,B,C], [B,C,E,F,G], [C,D,F,G,H,I]]. /*
digits = [8,9,7,5,4,1,3,2,6]
24 = sum([8,7,5,4])
24 = sum([8,9,4,1,2])
24 = sum([8,9,7])
24 = sum([9,7,4,1,3])
24 = sum([7,5,1,3,2,6]) korrekt */