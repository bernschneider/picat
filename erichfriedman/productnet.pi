/* Janko Erich Friedman Product Net
https://erich-friedman.github.io/puzzle/net5 */
import cp.

main(No) =>
    input(No, M), 
    M :: 0..99, 
    [M[Z,S] : Z in [1,3], S in 2..3] :: 0..9, 
    M[2] :: 0..9,
    M[1,1] * M[1,4] #= 10 * M[1,2] + M[1,3],
    M[1,1] * M[3,1] #= 10 * M[2,1] + M[2,2],
    M[1,1] * M[3,4] #= 10 * M[2,3] + M[2,4],
    M[1,4] * M[3,4] #= 10 * M[2,5] + M[2,6],
    M[3,1] * M[3,4] #= 10 * M[3,2] + M[3,3],
    solve(M), C11 = M[1,1], C12 = M[1,4], C21 = M[3,1], C22 = M[3,4],
    printf("%2d %2d %2d%n%2d %2d %2d%n%2d %2d %2d%n", 
            C11, C11*C12, C12,  C11*C21, C11*C22, C12*C22,  C21, C21*C22, C22).

input(0, M) =>
    M = {{_, _,4, _}, {2,_, _,2, 7,_}, {_, _,5, _} }. /*
 4 24  6
20 52 78
 5 65 13 correct */
input(1, M) =>
    M = {{_, 3,_, _}, {2,_, 4,_, _,6}, {_, _,4, _} }. /*
 4 32  8
28 48 96
 7 84 12 correct */