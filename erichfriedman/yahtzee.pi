/* Janko Erich Friedman Yahtzee
https://erich-friedman.github.io/puzzle/yahtzee/ */
import util, sat.

main(No) =>
    input(No, SigR, SigC), N = len(SigR),
    M = new_array(N,N), M :: 1..6, 
    foreach({Sig,L} in zip(SigR ++ SigC, M.rows() ++ M.columns())) 
        if     Sig = "Y"  then nvalue(1, to_list(L)) % Yahtzee, 5 identical dice
        elseif Sig = "LS" then Start :: 1..2, % Large Straight, 5 dice in numerical order
                               foreach(I in 0..4) SI #= Start + I, count(SI, L, 1) end
        elseif Sig = "SS" then Start :: 1..3, % Small Straight, 4 dice in numerical order
                               foreach(I in 0..3) SI #= Start + I, count(SI, L, CI), CI #> 0 end
        elseif Sig = "FH" then [A,B] :: 1..6, A #!= B, count(A, L, 2), count(B, L, 3) % Full House
        elseif Sig[2] = 'K' then [Cnt,Total] = Sig.split("K"), % 4Kn = 4 of a Kind with total n
                                 C = to_int(Cnt),   count(_, L, C), 
                                 T = to_int(Total), T #= sum(L),
                                 C6 #= 6 - C, nvalue(C6, to_list(L)) % no FH (???)
        end
    end,
    solve(M),
    foreach(Z in 1..N, S in 1..N) 
        printf("%d|", M[Z,S]), if S = N then nl end
    end.

input(0, SigR, SigC) => 
    SigR = ["4K14", "SS", "3K13", "FH", "LS"], SigC = ["4K13", "4K18", "LS", "SS", "3K8"]. /* 
3|2|3|3|3|
3|4|6|5|1|
3|4|2|2|2|
1|4|4|4|1|
3|4|5|2|1| korrekt */